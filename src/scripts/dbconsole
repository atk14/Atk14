#!/bin/sh

# Starts a database console.
#
#  $ ./scripts/dbconsole
#  $ ./scripts/dbconsole default
#  $ ./scripts/dbconsole import
#  # or
#  $ ATK14_ENV=PRODUCTION ./scripts/dbconsole
#  $ ATK14_ENV=PRODUCTION ./scripts/dbconsole default
#  $ ATK14_ENV=PRODUCTION ./scripts/dbconsole import
#
# To list available database configurations
#
#  $ ./scripts/dbconsole -l
#  $ ./scripts/dbconsole --list
#
# To enable verbose mode
#
#  $ ./scripts/dbconsole -v
#  $ ./scripts/dbconsole --verbose
#  $ ./scripts/dbconsole -g
#  $ ./scripts/dbconsole --gui
#  $ ./scripts/dbconsole -v import
#  $ ./scripts/dbconsole --verbose import

dirname=$(dirname $0)
cd $dirname;

verbose=
pgadmin=
params=

while true; do
	case $1 in
		-l|--list)
				./_list_database_configurations
				exit 0;;
		-v|--verbose)
				verbose=1;;
		-g|--gui)
				pgadmin=1;;
		*)
				break;;
	esac
	shift
done

configuration_name=$1

# add pgpass record to ~/.pgpass file when the record is not present
exec $(./pgpass_record -a $configuration_name)

if [ "$verbose" ]; then
	echo "verbose: ATK14_ENV=$(./_atk14_env -l)"
fi

if [ "$pgadmin" ]; then
	params="--gui"
fi

cmd=$(./_dbconsole_command $params "$configuration_name")

if [ "$verbose" ]; then
	echo "verbose: using configuration name \"$configuration_name\""
fi

if [ "$cmd" = "" ]; then
	echo "I don't know how to connect to the $configuration_name";
	exit 1
fi

if [ "$verbose" ]; then
	echo "verbose: about to execute $cmd"
fi

sh -c "$cmd"
